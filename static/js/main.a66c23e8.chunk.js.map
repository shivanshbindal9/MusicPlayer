{"version":3,"sources":["Images/pixar.jpg","reducers/videos.js","reducers/index.js","components/notFound.jsx","actions/index.js","components/sidebar.jsx","css/player.js","components/player.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","videos","state","action","type","id","url","completed","map","video","filter","reducer","combineReducers","NotFound","Image","centered","style","marginTop","src","image","Component","nextVideoId","deleteVideo","SideBar","handleDelete","props","Segment","inverted","Header","as","textAlign","Icon","name","Content","Divider","List","divided","verticalAlign","this","Item","key","floated","onClick","width","connect","dispatch","styles","topsearch","bottomsearch","marginBottom","Player","play","mute","volume","ytVidId","match","RegExp","$1","handleUrl","e","setState","target","value","handleAdd","addVideo","handlePlay","prevState","handleMute","handleEnd","setVolume","parseFloat","playercss","Container","Grid","Row","Column","Input","fluid","placeholder","onChange","Button","undefined","playing","muted","onEnded","min","max","step","toggleVideo","AppRouter","store","createStore","appReducers","applyMiddleware","thunk","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a66c23e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pixar.b9979651.jpg\";","const videos=(state=[],action) => {\n    switch (action.type) {\n        case 'ADD_VIDEO':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    url: action.url,\n                    completed: false\n                }\n            ]\n        case 'TOGGLE_VIDEO':\n            return state.map(video =>\n                video.id===action.id? { ...video,completed: !video.completed }:video\n            )\n        case 'DELETE_VIDEO':\n            return state.filter(video =>\n                video.id!==action.id\n            )\n        default:\n            return state\n    }\n}\n\nexport default videos","import { combineReducers } from 'redux'\nimport videos from './videos'\n\nconst reducer=combineReducers({\n    videos,\n})\n\nexport default reducer;","import React,{ Component } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport image from '../Images/pixar.jpg';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div>\n                <Image centered style={{ marginTop: '10vh' }} src={image} />\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","let nextVideoId=0\n\nexport const addVideo=url => ({\n    type: 'ADD_VIDEO',\n    id: nextVideoId++,\n    url\n})\n\nexport const deleteVideo=id => ({\n    type: 'DELETE_VIDEO',\n    id\n})\n\nexport const toggleVideo=id => ({\n    type: 'TOGGLE_VIDEO',\n    id\n})","import React,{ Component } from 'react';\nimport { Segment,List,Header,Icon,Divider } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { deleteVideo } from \"../actions\"\n\nclass SideBar extends Component {\n\n    handleDelete=(id) => {\n        this.props.deleteVideo(id);\n    }\n\n    render() {\n        return (\n            <Segment inverted>\n                <Header as='h2' textAlign='center'>\n                    <Icon name='plug' />\n                    <Header.Content>Playlist</Header.Content>\n                </Header>\n                <Divider />\n                <List divided inverted verticalAlign='middle'>\n                    {this.props.videos.map(video => (\n                        <List.Item key={video.id}>\n                            <List.Content floated='right'>\n                                <Icon name='close' onClick={() => this.handleDelete(video.id)} />\n                            </List.Content>\n                            <List.Content style={{ width: '60%' }}>\n                                <List.Header>{video.url}</List.Header>\n                            </List.Content>\n                        </List.Item>\n                    )\n                    )}\n                </List>\n            </Segment>\n        )\n    }\n}\n\nconst mapStateToProps=state => {\n    return {\n        videos: state.videos,\n    }\n}\n\n\nconst mapDispatchToProps=dispatch => {\n    return {\n        deleteVideo: (id) => dispatch(deleteVideo(id)),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SideBar);","\nconst styles={\n    topsearch: {\n        marginTop: '2%'\n    },\n    bottomsearch: {\n        marginBottom: '2%'\n    }\n}\nexport default styles;","import React,{ Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Input,Grid,Container,Button } from 'semantic-ui-react'\nimport SideBar from './sidebar';\nimport { connect } from 'react-redux';\nimport { addVideo,toggleVideo,deleteVideo } from \"../actions\"\nimport playercss from '../css/player.js';\n\nclass Player extends Component {\n    state={\n        play: \"true\",\n        mute: \"false\",\n        volume: 0.8,\n        url: \"\"\n    }\n\n    ytVidId=(url) => {\n        let p=/^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n        return (url.match(p))? RegExp.$1:false;\n    }\n\n    handleUrl=(e) => {\n        this.setState({ url: e.target.value });\n    }\n\n    handleAdd=(e) => {\n        let url=this.state.url;\n        let addurl=this.ytVidId(url);\n        if (addurl) {\n            this.props.addVideo(this.state.url);\n            this.setState({ url: \"\" });\n        }\n    }\n\n    handlePlay=() => {\n        this.setState(prevState => ({\n            play: prevState.play===\"true\"? \"false\":\"true\"\n        }))\n    }\n\n    handleMute=() => {\n        this.setState(prevState => ({\n            mute: prevState.mute===\"true\"? \"false\":\"true\"\n        }))\n    }\n    handleEnd=() => {\n        this.props.deleteVideo(this.props.videos[0].id);\n    }\n\n    setVolume=(e) => {\n        this.setState({ volume: parseFloat(e.target.value) })\n    }\n    render() {\n        return (\n            <div style={playercss.topsearch}>\n                <Container>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column width={10}>\n                                <Input style={playercss.topsearch} type='text' value={this.state.url} fluid placeholder='Enter video url here' onChange={(e) => this.handleUrl(e)} >\n                                    <input />\n                                    <Button type='submit' onClick={(e) => this.handleAdd(e)}>Add</Button>\n                                </Input>\n                                <ReactPlayer style={playercss.topsearch}\n                                    url={this.props.videos[0]===undefined? \"\":this.props.videos[0].url}\n                                    width=\"100%\"\n                                    playing={this.state.play===\"true\"}\n                                    muted={this.state.mute==='false'}\n                                    volume={this.state.volume}\n                                    onEnded={this.handleEnd}\n                                />\n                                <Button onClick={() => this.handlePlay()}> {this.state.play===\"true\"? 'pause':'play'} </Button>\n                                <Button onClick={() => this.handleMute()}> {this.state.mute==='false'? 'unmute':'mute'} </Button>\n                                Volume\n                                <Input type='range' min={0} max={1} step='any' value={this.state.volume} onChange={(e) => this.setVolume(e)} />\n                            </Grid.Column>\n                            <Grid.Column width={6}>\n                                <SideBar />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state => {\n    return {\n        videos: state.videos,\n    }\n}\n\n\nconst mapDispatchToProps=dispatch => {\n    return {\n        addVideo: (url) => {\n            dispatch(addVideo(url))\n        },\n        deleteVideo: (id) => dispatch(deleteVideo(id)),\n        toggleVideo: (id) => dispatch(toggleVideo(id)),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Player);","import React,{ Component } from 'react';\n// import logo from './logo.svg';\nimport { Route,Switch,BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from \"react-redux\";\nimport { createStore,applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk'\nimport './App.css';\nimport appReducers from \"./reducers\";\nimport NotFound from './components/notFound';\nimport Player from './components/player';\n\nexport default class AppRouter extends Component {\n  constructor(props) {\n    super(props)\n    this.store=createStore(appReducers,applyMiddleware(thunk));\n  }\n  render() {\n    return (\n      <Provider store={this.store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/player\" component={Player} />\n            <Route component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}